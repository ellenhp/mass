// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package api;

message SteeringSystem {
  // The number of degrees this system can turn per second.
  double degrees_per_second = 1;
}
message DivingSystem {
  // The number of feet this system can dive or ascend per second at neutral
  // buoyancy.
  double feet_per_second = 1;
  // The maxiumum depth (test depth) of this system in feet.
  uint32 max_depth_feet = 2;
}
message PropulsionSystem {
  // The max speed of this vessel, in knots.
  uint32 max_speed_knots = 1;
  // The acceleration of this vessel, in knots per second.
  double knots_per_second = 2;
}
message MapSystem {
  // There isn't really anything to put here but it'll initialize things on
  // the other end.
}
message HullSystem {
  // The draft of the vessel while surfaced.
  double draft_surfaced = 1;
}

message VesselSystem {
  oneof system {
    SteeringSystem steering_system = 1;
    DivingSystem diving_system = 2;
    PropulsionSystem propulsion_system = 3;
    MapSystem map_system = 4;
  }
}
