// Copyright (C) 2020 Ellen Poe
//
// This file is part of MASS.
//
// MASS is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// MASS is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with MASS.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";
package api;

message SteeringSystem {
  // The number of degrees this system can turn per second.
  double degrees_per_second = 1;
}
message DivingSystem {
  // The number of feet this system can dive or ascend per second at neutral
  // buoyancy.
  double feet_per_second = 1;
  // The maxiumum depth (test depth) of this system in feet.
  uint32 max_depth_feet = 2;
}
message PropulsionSystem {
  // The max speed of this vessel, in knots.
  uint32 max_speed_knots = 1;
  // The acceleration of this vessel, in knots per second.
  double knots_per_second = 2;
}
message MapSystem {
  // There isn't really anything to put here but it'll initialize things on
  // the other end.
}
message HullSystem {
  // The draft of the vessel while surfaced.
  double draft_surfaced = 1;
}

message VesselSystem {
  oneof system {
    SteeringSystem steering_system = 1;
    DivingSystem diving_system = 2;
    PropulsionSystem propulsion_system = 3;
    MapSystem map_system = 4;
    HullSystem hull_system = 5;
  }
}
